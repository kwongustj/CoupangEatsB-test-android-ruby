// Generated by view binder compiler. Do not edit!
package com.example.android_coupangeats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatImageButton;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.android_coupangeats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView bar1;

  @NonNull
  public final TextView bar2;

  @NonNull
  public final AppCompatButton btnLogin;

  @NonNull
  public final AppCompatImageButton btnPwEye;

  @NonNull
  public final AppCompatImageButton btnX;

  @NonNull
  public final EditText etxtId;

  @NonNull
  public final EditText etxtPw;

  @NonNull
  public final AppCompatImageView imgLogo;

  @NonNull
  public final LinearLayoutCompat layoutId;

  @NonNull
  public final ConstraintLayout layoutPw;

  @NonNull
  public final AppCompatTextView txtFindId;

  @NonNull
  public final AppCompatTextView txtFindPw;

  @NonNull
  public final TextView txtPassword;

  @NonNull
  public final AppCompatTextView txtSignIn;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull TextView bar1,
      @NonNull TextView bar2, @NonNull AppCompatButton btnLogin,
      @NonNull AppCompatImageButton btnPwEye, @NonNull AppCompatImageButton btnX,
      @NonNull EditText etxtId, @NonNull EditText etxtPw, @NonNull AppCompatImageView imgLogo,
      @NonNull LinearLayoutCompat layoutId, @NonNull ConstraintLayout layoutPw,
      @NonNull AppCompatTextView txtFindId, @NonNull AppCompatTextView txtFindPw,
      @NonNull TextView txtPassword, @NonNull AppCompatTextView txtSignIn) {
    this.rootView = rootView;
    this.bar1 = bar1;
    this.bar2 = bar2;
    this.btnLogin = btnLogin;
    this.btnPwEye = btnPwEye;
    this.btnX = btnX;
    this.etxtId = etxtId;
    this.etxtPw = etxtPw;
    this.imgLogo = imgLogo;
    this.layoutId = layoutId;
    this.layoutPw = layoutPw;
    this.txtFindId = txtFindId;
    this.txtFindPw = txtFindPw;
    this.txtPassword = txtPassword;
    this.txtSignIn = txtSignIn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bar_1;
      TextView bar1 = ViewBindings.findChildViewById(rootView, id);
      if (bar1 == null) {
        break missingId;
      }

      id = R.id.bar_2;
      TextView bar2 = ViewBindings.findChildViewById(rootView, id);
      if (bar2 == null) {
        break missingId;
      }

      id = R.id.btn_login;
      AppCompatButton btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.btn_pw_eye;
      AppCompatImageButton btnPwEye = ViewBindings.findChildViewById(rootView, id);
      if (btnPwEye == null) {
        break missingId;
      }

      id = R.id.btn_x;
      AppCompatImageButton btnX = ViewBindings.findChildViewById(rootView, id);
      if (btnX == null) {
        break missingId;
      }

      id = R.id.etxt_id;
      EditText etxtId = ViewBindings.findChildViewById(rootView, id);
      if (etxtId == null) {
        break missingId;
      }

      id = R.id.etxt_pw;
      EditText etxtPw = ViewBindings.findChildViewById(rootView, id);
      if (etxtPw == null) {
        break missingId;
      }

      id = R.id.img_logo;
      AppCompatImageView imgLogo = ViewBindings.findChildViewById(rootView, id);
      if (imgLogo == null) {
        break missingId;
      }

      id = R.id.layout_id;
      LinearLayoutCompat layoutId = ViewBindings.findChildViewById(rootView, id);
      if (layoutId == null) {
        break missingId;
      }

      id = R.id.layout_pw;
      ConstraintLayout layoutPw = ViewBindings.findChildViewById(rootView, id);
      if (layoutPw == null) {
        break missingId;
      }

      id = R.id.txt_find_id;
      AppCompatTextView txtFindId = ViewBindings.findChildViewById(rootView, id);
      if (txtFindId == null) {
        break missingId;
      }

      id = R.id.txt_find_pw;
      AppCompatTextView txtFindPw = ViewBindings.findChildViewById(rootView, id);
      if (txtFindPw == null) {
        break missingId;
      }

      id = R.id.txt_password;
      TextView txtPassword = ViewBindings.findChildViewById(rootView, id);
      if (txtPassword == null) {
        break missingId;
      }

      id = R.id.txt_sign_in;
      AppCompatTextView txtSignIn = ViewBindings.findChildViewById(rootView, id);
      if (txtSignIn == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, bar1, bar2, btnLogin, btnPwEye,
          btnX, etxtId, etxtPw, imgLogo, layoutId, layoutPw, txtFindId, txtFindPw, txtPassword,
          txtSignIn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
