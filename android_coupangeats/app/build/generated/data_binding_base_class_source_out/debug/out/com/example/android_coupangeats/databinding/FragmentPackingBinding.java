// Generated by view binder compiler. Do not edit!
package com.example.android_coupangeats.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.android_coupangeats.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPackingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView imgArrow;

  @NonNull
  public final AppCompatImageView imgTime;

  @NonNull
  public final ConstraintLayout layoutTop;

  @NonNull
  public final TextView txtInformation;

  @NonNull
  public final TextView txtPacking;

  @NonNull
  public final TextView txtPackingAddress;

  @NonNull
  public final TextView txtTime;

  private FragmentPackingBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView imgArrow, @NonNull AppCompatImageView imgTime,
      @NonNull ConstraintLayout layoutTop, @NonNull TextView txtInformation,
      @NonNull TextView txtPacking, @NonNull TextView txtPackingAddress,
      @NonNull TextView txtTime) {
    this.rootView = rootView;
    this.imgArrow = imgArrow;
    this.imgTime = imgTime;
    this.layoutTop = layoutTop;
    this.txtInformation = txtInformation;
    this.txtPacking = txtPacking;
    this.txtPackingAddress = txtPackingAddress;
    this.txtTime = txtTime;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPackingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPackingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_packing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPackingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_arrow;
      AppCompatImageView imgArrow = ViewBindings.findChildViewById(rootView, id);
      if (imgArrow == null) {
        break missingId;
      }

      id = R.id.img_time;
      AppCompatImageView imgTime = ViewBindings.findChildViewById(rootView, id);
      if (imgTime == null) {
        break missingId;
      }

      id = R.id.layout_top;
      ConstraintLayout layoutTop = ViewBindings.findChildViewById(rootView, id);
      if (layoutTop == null) {
        break missingId;
      }

      id = R.id.txt_information;
      TextView txtInformation = ViewBindings.findChildViewById(rootView, id);
      if (txtInformation == null) {
        break missingId;
      }

      id = R.id.txt_packing;
      TextView txtPacking = ViewBindings.findChildViewById(rootView, id);
      if (txtPacking == null) {
        break missingId;
      }

      id = R.id.txt_packing_address;
      TextView txtPackingAddress = ViewBindings.findChildViewById(rootView, id);
      if (txtPackingAddress == null) {
        break missingId;
      }

      id = R.id.txt_time;
      TextView txtTime = ViewBindings.findChildViewById(rootView, id);
      if (txtTime == null) {
        break missingId;
      }

      return new FragmentPackingBinding((ConstraintLayout) rootView, imgArrow, imgTime, layoutTop,
          txtInformation, txtPacking, txtPackingAddress, txtTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
